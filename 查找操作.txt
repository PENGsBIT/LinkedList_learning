//查找倒数第K个结点（k > 0）
public static Node searchKthLastNode(Node head, int k) {
	if (head == null || k < 0)
		return head;
	if (k > getListLength(head))
		return null;
	Node target = head;
	Node temp = head;
	for (int i = 0; i < k; i++) {
		temp = temp.next;
	}
	// n-k
	while (temp != null) {
		target = target.next;
		temp = temp.next;
	}
	temp = null;
	target.next = null;
	// System.out.print("target.value: " + target.value + "  ");
	return target;
}

//查找单链表的中间结点 
public static Node searchMiddleNode(Node head) {
	if (head == null || head.next == null)
		return head;
	// 一般查找问题都是两个指向头节点的指针（快慢指针）共同移动。
	Node fast = head;
	Node slow = head;
	while (fast != null && fast.next != null) {
		fast = fast.next.next;
		slow = slow.next;
	}
	slow.next = null;
	// System.out.print("slow.value: " + slow.value + "  ");
	return slow;
}